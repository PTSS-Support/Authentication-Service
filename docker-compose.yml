version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: keycloak_postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    command: ["start-dev"]
    healthcheck:
      test: [ "CMD", "/opt/keycloak/bin/kc.sh", "show-config" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s

  init-keycloak:
    image: alpine:latest
    depends_on:
      keycloak:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./keycloak-init.sh
        target: /init.sh
      - type: bind
        source: ./.env
        target: /.env
    command: >
      sh -c "
        apk update &&
        apk add --no-cache curl jq &&
        dos2unix /init.sh 2>/dev/null || true &&
        chmod +x /init.sh &&
        sh /init.sh
      "

volumes:
  postgres_data: